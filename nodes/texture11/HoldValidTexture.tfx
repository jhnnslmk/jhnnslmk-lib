//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D inTexture : INITIAL;
Texture2D frameDelay;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

SamplerState pointSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float4 c = inTexture.Sample(pointSampler,input.uv);
	return (all(c)) ? c : frameDelay.Sample(pointSampler, input.uv);
}

technique11 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}
